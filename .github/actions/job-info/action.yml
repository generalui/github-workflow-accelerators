name: Job Info

description: Gather info for jobs

inputs:
  default_environment:
    default: ''
    description: The default environment to use if none is found (defaults to an empty string)

outputs:
  branch:
    description: The target branch
    value: ${{ steps.target_branch.outputs.branch }}
  env_name:
    description: The target environment
    value: ${{ steps.environment.outputs.name }}
  pr_branch:
    description: The branch a PR was initiated from
    value: ${{ steps.pr_branch.outputs.pr_branch }}
  tag:
    description: The target branch
    value: ${{ steps.tag.outputs.tag }}

runs:
  using: composite
  steps:
    - name: Get tag
      run: |
          trigger=${GITHUB_REF_TYPE}
          tag=$([ ${trigger} == tag ] && echo "${GITHUB_REF_NAME}" || echo "none" )
          echo "tag=${tag}" >> $GITHUB_OUTPUT

          echo "::group::Tag"
          echo 'tag: '${tag}
          echo "::endgroup::"
      shell: bash
      id: tag

    - name: Get target branch
      run: |
        # Get the target branch
        branch="${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
        if [[ ${{ github.event_name }} == 'pull_request' ]]; then
          branch=${{ github.event.pull_request.base.ref }}
        fi

        if [[ $branch == refs/tags/* ]]; then
          branch=$(echo "${{ steps.tag.outputs.tag }}"| cut -d'|' -f 3)
        fi
        echo "branch=${branch}" >> $GITHUB_OUTPUT

        echo "::group::Target Branch"
        echo 'branch: '${branch}
        echo "::endgroup::"
      shell: bash
      id: target_branch

    - name: Get PR branch
      run: |
        pr_branch=""
        if [[ ${{ github.event_name }} == 'pull_request' ]]; then
          pr_branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
        fi

        echo "pr_branch="${pr_branch} >> $GITHUB_OUTPUT

        echo "::group::PR Branch"
        echo 'PR branch: '${pr_branch}
        echo "::endgroup::"
      shell: bash
      id: pr_branch

    # For info on Github Environments, see: https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment
    - name: Get environment
      run: |
        # See https://askubuntu.com/a/889746
        shopt -s extglob

        env=${{ inputs.default_environment }}
        case "${{ steps.target_branch.outputs.branch }}" in
          develop)    read -r env <<< "dev";      ;;
          main)       read -r env <<< "prod";     ;;
          qa)         read -r env <<< "qa";       ;;
          sandbox)    read -r env <<< "sandbox";  ;;
          staging)    read -r env <<< "staging";  ;;
          test)       read -r env <<< "test";     ;;
        esac

        case "${{ steps.tag.outputs.tag }}" in
          *-dev)                                              read -r env <<< "dev";      ;;
          *-qa)                                               read -r env <<< "qa";       ;;
          *-sandbox)                                          read -r env <<< "sandbox";  ;;
          *-staging)                                          read -r env <<< "staging";  ;;
          *-test)                                             read -r env <<< "test";     ;;
          +([0-9]).+([0-9]).+([0-9])?(-|+)*([0-9A-Za-z+-.]))  read -r env <<< "prod";     ;;
        esac

        echo "name=${env}" >> $GITHUB_OUTPUT

        echo "::group::Environment"
        echo 'environment: '${env}
        echo "::endgroup::"
      shell: bash
      id: environment
